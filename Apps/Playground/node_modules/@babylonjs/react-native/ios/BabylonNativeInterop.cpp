#include "BabylonNativeInterop.h"
#include "../JSCRuntime.h"

#include <Babylon/JsRuntime.h>
#include <Babylon/Plugins/NativeWindow.h>
#include <Babylon/Plugins/NativeEngine.h>
#include <Babylon/Plugins/NativeInput.h>
//#include <Babylon/Plugins/NativeXr.h>
#include <Babylon/Polyfills/Window.h>

#include <arcana/threading/task_schedulers.h>

#include <JavaScriptCore/JavaScript.h>

//#include <Foundation/Foundation.h>
#include <CoreFoundation/CFRunLoop.h>

#include <optional>
#include <sstream>
#include <unistd.h>

namespace Babylon
{
    Native::Native(facebook::jsi::Runtime* jsiRuntime, void* windowPtr, size_t width, size_t height)
    {
        int z = 59;
        std::function<void(int)> doSomething = [z](int val)
        {
            int y = val;
        };
        
        CFRunLoopRef jsRunLoop2 = CFRunLoopGetCurrent();
        int i = 0;
        for (i = 0; i < 10000; i++)
        {
            CFRunLoopPerformBlock(jsRunLoop2, kCFRunLoopDefaultMode, ^
            {
                doSomething(i);
                if (i == 9999)
                {
                    int x = i;
                }
            });
        }
        
        auto jscRuntime = reinterpret_cast<facebook::jsc::JSCRuntime*>(jsiRuntime);
        JSGlobalContextRef jsContext = jscRuntime->getContext();

//
//        NSRunLoop* jsRunLoop = [NSRunLoop currentRunLoop];
//        [jsRunLoop performBlock:^{
//            doSomething();
//            int x = 5;
//        }];
        
        int x = 5;
    }
}
