#import "BabylonNativeInterop.h"

#import <React/RCTViewManager.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>
#import <MetalKit/MetalKit.h>

@interface EngineView : MTKView
@end

@implementation EngineView {
    RCTBridge* bridge;
    NSRunLoop* runLoop;
    BOOL initialized;
}

- (instancetype)init:(RCTBridge*)_bridge runLoop:(NSRunLoop*)_runLoop {
    if (self = [super initWithFrame:CGRectZero device:MTLCreateSystemDefaultDevice()]) {
        bridge = _bridge;
        runLoop = _runLoop;
        initialized = false;
        
        super.translatesAutoresizingMaskIntoConstraints = false;
        super.colorPixelFormat = MTLPixelFormatBGRA8Unorm_sRGB;
        super.depthStencilPixelFormat = MTLPixelFormatDepth32Float;
    }
    return self;
}

- (void)setBounds:(CGRect)bounds {
    [super setBounds:bounds];
    [self setView];
}

- (void)setView {
    const CGFloat width = super.bounds.size.width;
    const CGFloat height = super.bounds.size.height;
    
    if (width != 0 && height != 0) {
        const CGFloat scale = UIScreen.mainScreen.scale;
        if (!initialized) {
            [BabylonNativeInterop setView:bridge jsRunLoop:runLoop mktView:reinterpret_cast<void*>(self) width:static_cast<int>(width * scale) height:static_cast<int>(height * scale)];
            initialized = true;
        } else {
            // TODO: resize
        }
    }
}

@end


@interface EngineViewManager : RCTViewManager
@end

@implementation EngineViewManager {
    NSRunLoop* runLoop;
}

RCT_EXPORT_MODULE(EngineViewManager)

RCT_EXPORT_BLOCKING_SYNCHRONOUS_METHOD(setJSThread) {
    runLoop = [NSRunLoop currentRunLoop];
    return nil;
}

- (UIView *)view {
    return [[EngineView alloc] init:self.bridge runLoop:runLoop];
}

@end
