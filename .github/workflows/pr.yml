name: PR Build
on:
  pull_request:
    branches:
      - master
env:
  BRN_Version: '0.69'

jobs:
  build-android:
    runs-on: macos-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2.3.3
        with:
          submodules: 'recursive'
      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.8
        with:
          cmake-version: '3.19.6' # See https://gitlab.kitware.com/cmake/cmake/-/issues/22021
      - name: Setup Ninja
        run: brew install ninja
      - name: NPM Install (Playground)
        run: npm install
        working-directory: ./Apps/Playground
      - name: NPM Install (React Native ${{ env.BRN_Version }})
        run: npm run select ${{ env.BRN_Version }}
        working-directory: ./Apps/Playground
      - name: NPM Install (Binary Package)
        run: npm install
        working-directory: ./Package
      - name: Gulp (Android)
        run: npx gulp buildAndroid
        working-directory: ./Package
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_11_X64 }}

  build-iOS:
    runs-on: macos-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2.3.3
        with:
          submodules: 'recursive'
      - name: NPM Install (Playground)
        run: npm install
        working-directory: ./Apps/Playground
      - name: NPM Install (React Native ${{ env.BRN_Version }})
        run: npm run select --reactNative ${{ env.BRN_Version }}
        working-directory: ./Apps/Playground
      - name: NPM Install (Binary Package)
        run: npm install
        working-directory: ./Package
      - name: Gulp (iOS)
        run: npx gulp buildIOS
        working-directory: ./Package

  test-publish-android-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2.3.3
        with:
          submodules: 'recursive'
      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.8
        with:
          cmake-version: '3.19.6' # See https://gitlab.kitware.com/cmake/cmake/-/issues/22021
      - name: Setup Ninja
        run: brew install ninja
      - name: NPM Install (Playground)
        run: npm install
        working-directory: ./Apps/Playground
      - name: NPM Install (React Native ${{ env.BRN_Version }})
        run: npm run select --reactNative ${{ env.BRN_Version }}
        working-directory: ./Apps/Playground
      - name: NPM Install (Binary Package)
        run: npm install
        working-directory: ./Package
      - name: Gulp
        run: npx gulp
        working-directory: ./Package
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_11_X64 }}

  build-windows:
    runs-on: windows-2019
    strategy:
      matrix:
        platform: [x86, x64, ARM64]
        config: [Debug, Release]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2.3.3
        with:
          submodules: 'true'
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Setup NuGet
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: '5.x'
      - name: NPM Install (Playground)
        run: npm install
        working-directory: ./Apps/Playground
      - name: NPM Install (React Native ${{ env.BRN_Version }})
        run: npm run select ${{ env.BRN_Version }}
        working-directory: ./Apps/Playground
      - name: NPM Install (Binary Package)
        run: npm install
        working-directory: ./Package
      - name: Git (Windows)
        run: npx gulp initializeSubmodulesWindowsAgent
        working-directory: ./Package
      - name: Gulp Setup Project ${{ matrix.platform }} (Windows)
        run: npx gulp makeUWPProject${{ matrix.platform }}
        working-directory: ./Package
      - name: Gulp Build ${{ matrix.platform }} ${{ matrix.config }} (Windows)
        run: npx gulp buildUWP${{ matrix.platform }}${{ matrix.config }}
        working-directory: ./Package
      - name: Gulp NuGet Restore Playground
        run: npx gulp nugetRestoreUWPPlayground
        working-directory: ./Package
      - name: Gulp Build ${{ matrix.platform }} ${{ matrix.config }} Playground (Windows)
        run: npx gulp buildUWPPlayground${{ matrix.platform }}${{ matrix.config }}
        working-directory: ./Package

# Test packages
  build-android-ios-065:
    uses: ./.github/workflows/ios_android.yml
    with:
      react-native-version: '0.65'
      release-version: 0.0.${GITHUB_SHA::8}

  build-android-ios-069:
    uses: ./.github/workflows/ios_android.yml
    with:
      react-native-version: '0.69'
      release-version: 0.0.${GITHUB_SHA::8}

  build-android-ios-070:
    uses: ./.github/workflows/ios_android.yml
    with:
      react-native-version: '0.70'
      release-version: 0.0.${GITHUB_SHA::8}

  build-android-ios-071:
    uses: ./.github/workflows/ios_android.yml
    with:
      react-native-version: '0.71'
      release-version: 0.0.${GITHUB_SHA::8}

  build-windows-065:
    uses: ./.github/workflows/windows.yml
    with:
      react-native-version: '0.65'
      release-version: 0.0.${GITHUB_SHA::8}

  build-windows-069:
    uses: ./.github/workflows/windows.yml
    with:
      react-native-version: '0.69'
      release-version: 0.0.${GITHUB_SHA::8}

  build-windows-070:
    uses: ./.github/workflows/windows.yml
    with:
      react-native-version: '0.70'
      release-version: 0.0.${GITHUB_SHA::8}

  build-windows-071:
    uses: ./.github/workflows/windows.yml
    with:
      react-native-version: '0.71'
      release-version: 0.0.${GITHUB_SHA::8}

  build-typescript:
    uses: ./.github/workflows/typescript.yml
    with:
      release-version: 0.0.${GITHUB_SHA::8}

#  package:
#    needs: [build-typescript, build-android-ios-065, build-windows-065]
#    runs-on: ubuntu-latest
#    steps:
## Download artifacts    
#      - name: Download Assembled Folder
#        uses: actions/download-artifact@v2
#        with:
#          name: 'Assembled'
#          path: Package/Assembled
#      - name: Download Assembled-iOSAndroid 0.65 Folder
#        uses: actions/download-artifact@v2
#        with:
#          name: 'Assembled-iOSAndroid0.65'
#          path: Package/Assembled-iOSAndroid0.65
#      - name: Download Assembled-Windows 0.65 Folder
#        uses: actions/download-artifact@v2
#        with:
#          name: 'Assembled-Windows0.65'
#          path: Package/Assembled-Windows0.65
## Set up node js
#      - name: Setup Node.js
#        uses: actions/setup-node@v2.1.2
#        with:
#          node-version: '12.x'
#          registry-url: 'https://npm.pkg.github.com'
## Publish
#      - name: Version & Publish Package @babylonjs/react-native
#        run: |
#          npm version --no-git-tag-version 0.0.0-${GITHUB_SHA::8}
#          npm publish --access public --verbose
#        working-directory: ./Package/Assembled
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Version & Publish Package @babylonjs/react-native-iosandroid-0-65
#        run: |
#          npm version --no-git-tag-version 0.0.0-${GITHUB_SHA::8}
#          npm publish
#        working-directory: ./Package/Assembled-iOSAndroid0.65
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Version & Publish Package @babylonjs/react-native-windows-0-65
#        run: |
#          npm version --no-git-tag-version 0.0.0-${GITHUB_SHA::8}
#          npm publish
#        working-directory: ./Package/Assembled-Windows0.65
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
## Add PR comment with packages version
#      - name: Add SHORT_SHA env property with commit short sha
#        run: echo "SHORT_SHA=`echo ${GITHUB_SHA::8}`" >> $GITHUB_ENV
#      - name: Comment PR
#        uses: thollander/actions-comment-pull-request@v1
#        with:
#          message: |
#            Package available on https://npm.pkg.github.com registry. Packages version is 0.0.0-${{ env.SHORT_SHA }} . Packages list : https://github.com/BabylonJS/BabylonReactNative/packages
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}