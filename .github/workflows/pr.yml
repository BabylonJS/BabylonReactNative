name: PR Build
on:
  pull_request:
    branches:
      - master
env:
  BRN_Version: '0.64'

jobs:
#  build-android:
#    runs-on: macos-latest
#    steps:
#      - name: Checkout Repo
#        uses: actions/checkout@v2.3.3
#        with:
#          submodules: 'recursive'
#      - name: Setup CMake
#        uses: jwlawson/actions-setup-cmake@v1.8
#        with:
#          cmake-version: '3.26.3'
#      - name: Setup Ninja
#        run: brew install ninja
#      - name: NPM Install (Playground)
#        run: npm install
#        working-directory: ./Apps/BRNPlayground
#      - name: NPM Install (Binary Package)
#        run: npm install
#        working-directory: ./Package
#      - name: Setup Java
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '17'
#          check-latest: true
#      - name: Gulp (Android)
#        run: npx gulp buildAndroidRNTA
#        working-directory: ./Package
#        env:
#          JAVA_HOME: ${{ env.JAVA_HOME_11_X64 }}
#
#  build-iOS:
#    runs-on: macos-latest
#    steps:
#      - name: Checkout Repo
#        uses: actions/checkout@v2.3.3
#        with:
#          submodules: 'recursive'
#      - name: NPM Install (Playground)
#        run: npm install
#        working-directory: ./Apps/BRNPlayground
#      - name: NPM Install (Binary Package)
#        run: npm install
#        working-directory: ./Package
#      - name: Gulp (iOS)
#        run: npx gulp buildIOSRNTA
#        working-directory: ./Package

  build-windows:
    runs-on: windows-2019
    steps:
      - name: Support longpaths
        run: git config --system core.longpaths true
      - name: Checkout Repo
        uses: actions/checkout@v2.3.3
        with:
          submodules: 'true'
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.2
#      - name: Setup Node 16
#        uses: actions/setup-node@v3
#        with:
#          node-version: 16
#      - name: Setup NuGet
#        uses: nuget/setup-nuget@v1
#        with:
#          nuget-version: '5.x'
      - name: NPM Install RNTA
        run: npm install
        working-directory: ./Apps/BRNPlayground

      - name: NPM Install Package
        run: npm install
        working-directory: ./Package

      - name: NPM Windows Project
        run: npx install-windows-test-app --use-nuget
        working-directory: ./Apps/BRNPlayground

#      - name: Gulp build windows
#        run: npx gulp buildUWPx64DebugRNTA
#        working-directory: ./Package    

      - name: BabylonNative build directory
        run: mkdir @babylonjs/react-native/Build/uwp_x64
        working-directory: ./Modules    

      - name: CMake BabylonNative
        run: cmake -G "Visual Studio 16 2019" -D CMAKE_SYSTEM_NAME=WindowsStore -D CMAKE_SYSTEM_VERSION=10.0 -DCMAKE_UNITY_BUILD=true -A 'x64' ./../../../react-native-windows/windows
        working-directory: ./Modules/@babylonjs/react-native/Build/uwp_x64

      - name: Nuget restore
        run: nuget restore Playground.sln
        working-directory: ./Apps/BRNPlayground/windows
        
      - name: Nuget restore
        run: MSBuild /t:Restore /m BRNPlayground.sln
        working-directory: ./Apps/BRNPlayground/windows
        
      - name: Windows build
        run: MSBuild /p:Platform="x64" /p:Configuration="Release" /m BRNPlayground.sln
        working-directory: ./Apps/BRNPlayground/windows


# Test packages
#  build-android-ios-065:
#    uses: ./.github/workflows/ios_android.yml
#    with:
#      react-native-version: '0.65'
#      release-version: 0.0.${GITHUB_SHA::8}
#
#  build-android-ios-069:
#    uses: ./.github/workflows/ios_android.yml
#    with:
#      react-native-version: '0.69'
#      release-version: 0.0.${GITHUB_SHA::8}
#
#  build-android-ios-070:
#    uses: ./.github/workflows/ios_android.yml
#    with:
#      react-native-version: '0.70'
#      release-version: 0.0.${GITHUB_SHA::8}
#
#  build-android-ios-071:
#    uses: ./.github/workflows/ios_android.yml
#    with:
#      react-native-version: '0.71'
#      release-version: 0.0.${GITHUB_SHA::8}
#
#  build-windows-065:
#    uses: ./.github/workflows/windows.yml
#    with:
#      react-native-version: '0.65'
#      release-version: 0.0.${GITHUB_SHA::8}
#
#  build-windows-069:
#    uses: ./.github/workflows/windows.yml
#    with:
#      react-native-version: '0.69'
#      release-version: 0.0.${GITHUB_SHA::8}
#
#  build-windows-070:
#    uses: ./.github/workflows/windows.yml
#    with:
#      react-native-version: '0.70'
#      release-version: 0.0.${GITHUB_SHA::8}
#
#  build-windows-071:
#    uses: ./.github/workflows/windows.yml
#    with:
#      react-native-version: '0.71'
#      release-version: 0.0.${GITHUB_SHA::8}

#  build-typescript:
#    uses: ./.github/workflows/typescript.yml
#    with:
#      release-version: 0.0.${GITHUB_SHA::8}
